@model EcommerceProject.VM.UserVM
@{ 
            string action = ViewBag.Action;
}

<div>
    @using (Ajax.BeginForm(action,
        new AjaxOptions { OnSuccess = "onSuccess", OnFailure = "onFailure" }))
    {
        if (action == "PostEdit")
        {
            @Html.HiddenFor(z => z.ID)
            @Html.HiddenFor(z => z.CreationDate)
            @Html.HiddenFor(z => z.IsActive)
        }
        <div>
            @Html.LabelFor(z => z.Name)
            @Html.TextBoxFor(z => z.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(z => z.Name)
        </div>
        <div>

            @Html.LabelFor(z => z.Email)
            @Html.TextBoxFor(z => z.Email, new
            {
                @class = "form-control",
                type = "email",
            })
            @Html.ValidationMessageFor(z => z.Email)
            <label id="confirmationEmail"></label>
        </div>

        <div>
            @Html.LabelFor(z => z.Password)
            @Html.PasswordFor(z => z.Password, new { id = "password", @class = "form-control" })
            @Html.ValidationMessageFor(z => z.Password)
        </div>

        <div>
            <label>Confirm Password</label>
            @Html.PasswordFor(z => z.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(z => z.ConfirmPassword)
            <label id="confirmationPassword"></label>
        </div>


        <div>
            @Html.LabelFor(z => z.Address)
            @Html.TextAreaFor(z => z.Address, new { @class = "form-control" })
            @Html.ValidationMessageFor(z => z.Address)
        </div>

        <div>
            @Html.LabelFor(z => z.Phone)
            @Html.TextBoxFor(z => z.Phone, new { @class = "form-control" })
            @Html.ValidationMessageFor(z => z.Phone)
        </div>

        string buttonName = (action == "PostUser") ? "Register" : "Edit";
        <div>
            <button type="submit" class="btn btn-success">@buttonName</button>
        </div>
    }
</div>

